/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tientt.view;

import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tientt.dtos.SupplierDTO;
import tientt.exceptions.SupplierExistedException;
import tientt.logger.CustomLogger;
import tientt.exceptions.SupplierForeignConstraintException;
import tientt.services.interfaces.SupplierService;
import tientt.exceptions.SupplierInvalidException;
import tientt.mapper.interfaces.SupplierViewObjectMapper;
import tientt.view.tablemodel.SupplierTableModel;
import tientt.view.viewobject.SupplierViewObject;

/**
 *
 * @author natton
 */
public class SupplierPanel extends javax.swing.JPanel {

    private static final String[] TABLE_HEADERS = {"Code", "Name", "Address"};
    private static final int[] TABLE_INDEXES = {1, 2, 3};

    private SupplierTableModel model;
    private final SupplierService service;
    private boolean isAddNew = true;
    private static final Logger LOGGER = CustomLogger.getLogger();
    private final SupplierViewObjectMapper mapper;

    public SupplierPanel() {
        service = SupplierService.getNewInstance();
        mapper = SupplierViewObjectMapper.getNewInstance();
        initComponents();
        initTable();
    }

    private void initTable() {
        model = new SupplierTableModel(TABLE_HEADERS, TABLE_INDEXES);
        tblSupplier.setModel(model);
        try {
            List<SupplierDTO> listDTO = service.findAllSuppliers();
            List<SupplierViewObject> listViewObject = mapper.toListViewObject(listDTO);
            model.loadData(listViewObject);
        } catch (SQLException | ClassNotFoundException ex) {
            LOGGER.log(Level.SEVERE, ItemPanel.class.getName() + "::" + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSupCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSupName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboxCollaborating = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(827, 370));

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Detail"));

        jLabel1.setText("Code");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        jLabel4.setText("Collaborating");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 58, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(cboxCollaborating)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSupCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cboxCollaborating))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnSave.setText("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnNew.setText("Add new");
        btnNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnNewMouseClicked(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(38, 38, 38)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnNew)
                            .addComponent(btnDelete)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        isAddNew = false;
        int rowIndex = tblSupplier.getSelectedRow();
        SupplierViewObject selectedSupplier = model.getData().get(rowIndex);
        //display in detail panel
        txtSupCode.setText(selectedSupplier.getSupCode());
        txtSupCode.setEnabled(false);
        txtSupName.setText(selectedSupplier.getSupName());
        txtAddress.setText(selectedSupplier.getAddress());
        cboxCollaborating.setSelected(selectedSupplier.isCollaborating());
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void btnNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewMouseClicked
        isAddNew = true;
        //display in detail panel
        txtSupCode.setText("");
        txtSupCode.setEnabled(true);
        txtSupName.setText("");
        txtAddress.setText("");
        cboxCollaborating.setSelected(false);
        //remove focus on table
        tblSupplier.getSelectionModel().clearSelection();
    }//GEN-LAST:event_btnNewMouseClicked
    private void deleteSupplier() {
        try {
            //call model
            int selectedRow = tblSupplier.getSelectedRow();
            SupplierViewObject viewObject = model.getData().get(selectedRow);
            boolean result = service.deleteSupplier(viewObject.getSupCode());
            if (result) {
                model.delete(selectedRow);
            }
            //update view
            btnNewMouseClicked(null);
            tblSupplier.updateUI();
        } catch (SupplierForeignConstraintException e) {
            displayErrorDialog("Supplier still have items. Delete items first!!!!");
        } catch (ClassNotFoundException | SQLException e) {
            LOGGER.log(Level.SEVERE, ItemPanel.class.getName() + "::" + e.getMessage());
        }
    }
    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        if (!isAddNew) {
            int userChoice = JOptionPane.showConfirmDialog(this, "Are you sure", "Confirm delete", JOptionPane.OK_CANCEL_OPTION);
            if (userChoice == JOptionPane.OK_OPTION) {
                deleteSupplier();
            }//end if userChoice is OK
        }//end if selectedSupplier is not null
        else {
            JOptionPane.showMessageDialog(this, "Plese select a supplier");
        }//end else selectedSupplier is null

    }//GEN-LAST:event_btnDeleteMouseClicked
    private void displayErrorDialog(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    private SupplierViewObject getSupplierNewInfo() {
        String supCode = txtSupCode.getText().trim();
        String supName = txtSupName.getText().trim();
        String address = txtAddress.getText().trim();
        boolean collaborating = cboxCollaborating.isSelected();
        SupplierViewObject newSupplier = new SupplierViewObject(supCode, supName, address, collaborating);
        return newSupplier;
    }

    private boolean updateSupplier() throws ClassNotFoundException, SQLException,
            SupplierInvalidException, SupplierForeignConstraintException {
        boolean result;
        //call model
        SupplierViewObject newViewObject = getSupplierNewInfo();
        int selectedRow = tblSupplier.getSelectedRow();
        result = service.updateSupplier(newViewObject);
        if (result) {
            model.update(newViewObject, selectedRow);
        }
        //update view
        tblSupplier.updateUI();
        return result;
    }

    private boolean insertNewSupplier() throws ClassNotFoundException, 
            SQLException, SupplierInvalidException, SupplierExistedException {
        boolean result;
        //call model
        SupplierViewObject newViewObject = getSupplierNewInfo();
        result = service.insertSupplier(newViewObject);
        if (result) {
            model.addFirst(newViewObject);
        }
        //update view
        txtSupCode.setEnabled(false);
        //change focus to the first row
        tblSupplier.requestFocus();
        tblSupplier.changeSelection(0, 0, false, false);
        tblSupplier.updateUI();
        return result;
    }
    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        boolean result;
        try {
            if (!isAddNew) {
                result = updateSupplier();
            } else {
                result = insertNewSupplier();
                isAddNew = true;
            }//end else is create new supplier
            if (result) {
                JOptionPane.showMessageDialog(this, "Save successfully");
            }
        } catch (SupplierInvalidException e) {
            displayErrorDialog(e.getMessage());
        } catch (ClassNotFoundException | SQLException e) {
            LOGGER.log(Level.SEVERE, ItemPanel.class.getName() + "::" + e.getMessage());
        } catch (SupplierForeignConstraintException ex) {
            displayErrorDialog("Cannot update. Supplier still has dependent items");
            cboxCollaborating.setSelected(true);
        } catch (SupplierExistedException ex) {
            displayErrorDialog("Supplier already exists");
        }


    }//GEN-LAST:event_btnSaveMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cboxCollaborating;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtSupCode;
    private javax.swing.JTextField txtSupName;
    // End of variables declaration//GEN-END:variables
}
